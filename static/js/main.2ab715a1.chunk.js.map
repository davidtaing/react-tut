{"version":3,"sources":["Square.js","Board.js","Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","renderSquare","i","squares","calculateWinner","lines","length","a","b","c","ReactDOM","render","status","React","useState","stepNumber","setStepNumber","isXNext","setIsXNext","Array","fill","gameHistory","setGameHistory","history","current","winner","moves","map","step","move","desc","ley","jumpTo","slice","concat","handleClick","document","getElementById"],"mappings":"sKAEaA,EAAS,SAACC,GACnB,OAAQ,4BAAQC,UAAU,SAASC,QAASF,EAAME,SAC7CF,EAAMG,QCDFC,EAAQ,SAACJ,GAClB,IAAMK,EAAe,SAACC,GAClB,OAAO,kBAAC,EAAD,CAAQH,MAAOH,EAAMO,QAAQD,GAAIJ,QAAS,kBAAMF,EAAME,QAAQI,OAEzE,OAAQ,6BACJ,yBAAKL,UAAU,aACVI,EAAa,GACbA,EAAa,GACbA,EAAa,IAElB,yBAAKJ,UAAU,aACVI,EAAa,GACbA,EAAa,GACbA,EAAa,IAElB,yBAAKJ,UAAU,aACVI,EAAa,GACbA,EAAa,GACbA,EAAa,MCuCnB,SAASG,EAAgBD,GAW5B,IAVA,IAAME,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFH,EAAI,EAAGA,EAAIG,EAAMC,OAAQJ,IAAK,CAAC,IAAD,cACjBG,EAAMH,GADW,GAC5BK,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GAClE,OAAON,EAAQI,GAGvB,OAAO,KCtEXG,IAASC,OACL,mBDLgB,WAAO,IAuCnBC,EAvCkB,EACcC,IAAMC,SAAS,GAD7B,mBACfC,EADe,KACHC,EADG,OAEQF,oBAAS,GAFjB,mBAEfG,EAFe,KAENC,EAFM,OAGgBJ,mBAAS,CAAC,CAACX,QAASgB,MAAM,GAAGC,KAAK,SAHlD,mBAGfC,EAHe,KAGFC,EAHE,KA0BhBC,EAAUF,EACVG,EAAUD,EAAQA,EAAQjB,OAAS,GACnCmB,EAASrB,EAAgBoB,EAAQrB,SAEjCuB,EAAQH,EAAQI,KAAI,SAACC,EAAMC,GAC7B,IAAMC,EAAOD,EACT,eAAiBA,EACjB,mBACJ,OAAQ,wBAAIE,IAAKF,GACb,4BAAQ/B,QAAS,kBAdV,SAAC8B,GACZZ,EAAcY,GACdV,EAAYU,EAAO,IAAO,GAYCI,CAAOH,KAAQC,OAW9C,OALIlB,EADAa,EACS,WAAaA,EAGb,iBAAmBR,EAAU,IAAM,KAExC,yBAAKpB,UAAU,QACnB,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAOM,QAASqB,EAAQrB,QAASL,QAAS,SAACI,GAAD,OA3C9B,SAACA,GACjB,IAAMqB,EAAUF,EAAYY,MAAM,EAAGlB,EAAa,GAE5CZ,EADUoB,EAAQA,EAAQjB,OAAS,GACjBH,QAAQ8B,QAC5B7B,EAAgBD,IAAYA,EAAQD,KAGxCC,EAAQD,GAAKe,EAAU,IAAM,IAE7BK,EAAeC,EAAQW,OAAO,CAAC,CAC3B/B,QAASA,MAEba,EAAcO,EAAQjB,QACtBY,GAAYD,IA8ByCkB,CAAYjC,OAEjE,yBAAKL,UAAU,aACX,6BAAMe,GACN,4BAAKc,OC/Cb,MACAU,SAASC,eAAe,U","file":"static/js/main.2ab715a1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Square = (props) => {\r\n    return (<button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n    </button>);\r\n};\r\n","import React from 'react';\r\nimport { Square } from './Square';\r\n\r\nexport const Board = (props) => {\r\n    const renderSquare = (i) => {\r\n        return <Square value={props.squares[i]} onClick={() => props.onClick(i)} />;\r\n    };\r\n    return (<div>\r\n        <div className=\"board-row\">\r\n            {renderSquare(0)}\r\n            {renderSquare(1)}\r\n            {renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n            {renderSquare(3)}\r\n            {renderSquare(4)}\r\n            {renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n            {renderSquare(6)}\r\n            {renderSquare(7)}\r\n            {renderSquare(8)}\r\n        </div>\r\n    </div>);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Board } from './Board';\r\n\r\nexport const Game = () => {    \r\n    const [stepNumber, setStepNumber] = React.useState(0);\r\n    const [isXNext, setIsXNext] = useState(true);\r\n    const [gameHistory, setGameHistory] = useState([{squares: Array(9).fill(null)}]);\r\n\r\n    const handleClick = (i) => {\r\n        const history = gameHistory.slice(0, stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = isXNext ? 'X' : 'O';\r\n\r\n        setGameHistory(history.concat([{\r\n            squares: squares,\r\n        }]));\r\n        setStepNumber(history.length);\r\n        setIsXNext(!isXNext);\r\n    }\r\n\r\n    const jumpTo = (step) => {\r\n        setStepNumber(step);\r\n        setIsXNext((step % 2) === 0 );\r\n    }\r\n\r\n    const history = gameHistory;\r\n    const current = history[history.length - 1];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n        const desc = move ?\r\n            'Go to move #' + move :\r\n            'Go to game start';\r\n        return (<li ley={move}>\r\n            <button onClick={() => jumpTo(move)}>{desc}</button>\r\n        </li>);\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n        status = 'Winner: ' + winner;\r\n    }\r\n    else {\r\n        status = 'Next player: ' + (isXNext ? 'X' : 'O');\r\n    }\r\n    return (<div className=\"game\">\r\n        <div className=\"game-board\">\r\n            <Board squares={current.squares} onClick={(i) => handleClick(i)} />\r\n        </div>\r\n        <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Game } from './Game';\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}